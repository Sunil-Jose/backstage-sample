---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-system
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: examples
spec:
  owner: guests
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-component
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: example-website
spec:
  type: website
  lifecycle: experimental
  owner: guests
  system: examples
  providesApis: [example-grpc-api]
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-api
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: example-grpc-api
spec:
  type: grpc
  lifecycle: experimental
  owner: guests
  system: examples
  definition: |
    syntax = "proto3";

    service Exampler {
      rpc Example (ExampleMessage) returns (ExampleMessage) {};
    }

    message ExampleMessage {
      string example = 1;
    };
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: serviceA
spec:
  type: website
  lifecycle: experimental
  owner: guests
  system: systemA
---
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: systemA
spec:
  owner: guests
  domain: booking
---
apiVersion: backstage.io/v1alpha1
kind: Domain
metadata:
  name: booking
spec:
  owner: guests
---
apiVersion: functionality.tw/v1alpha1
kind: Functionality
metadata:
  name: func1
spec:
  owner: guests
  platform: platform1
  components: serviceA
---
apiVersion: functionality.tw/v1alpha1
kind: Functionality
metadata:
  name: func2
spec:
  owner: guests
  components: serviceA
---
apiVersion: functionality.tw/v1alpha1
kind: Platform
metadata:
  name: platform1
  title: Platform 1
spec:
  owner: guests
---
apiVersion: functionality.tw/v1alpha1
kind: Functionality
metadata:
  name: func3
spec:
  owner: guests
  components: serviceA
  functionality: func1
