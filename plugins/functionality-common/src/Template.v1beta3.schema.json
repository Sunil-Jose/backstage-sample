{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "FunctionalityV1beta3",
    "description": "A Functionality is a representation of a ???",
    "examples": [
      {
        "apiVersion": "scaffolder.backstage.io/v1beta3",
        "kind": "Template",
        "metadata": {
          "name": "react-ssr-template",
          "title": "React SSR Template",
          "description": "Next.js application skeleton for creating isomorphic web applications.",
          "tags": ["recommended", "react"]
        },
        "spec": {
          "owner": "artist-relations-team",
          "type": "website",
          "parameters": {
            "required": ["name", "description", "repoUrl"],
            "backstage:permissions": {
              "tags": ["one", "two"]
            },
            "properties": {
              "name": {
                "title": "Name",
                "type": "string",
                "description": "Unique name of the component"
              },
              "description": {
                "title": "Description",
                "type": "string",
                "description": "Description of the component"
              },
              "repoUrl": {
                "title": "Pick a repository",
                "type": "string",
                "ui:field": "RepoUrlPicker"
              }
            }
          },
          "steps": [
            {
              "id": "fetch",
              "name": "Fetch",
              "action": "fetch:plain",
              "parameters": {
                "url": "./template"
              },
              "backstage:permissions": {
                "tags": ["one", "two"]
              }
            },
            {
              "id": "publish",
              "name": "Publish to GitHub",
              "action": "publish:github",
              "parameters": {
                "repoUrl": "${{ parameters.repoUrl }}"
              },
              "if": "${{ parameters.repoUrl }}"
            }
          ],
          "output": {
            "catalogInfoUrl": "${{ steps.publish.output.catalogInfoUrl }}"
          }
        }
      }
    ],
    "allOf": [
      {
        "$ref": "Entity"
      },
      {
        "type": "object",
        "properties": {
          "apiVersion": {
            "enum": ["functionality.tw/v1beta3"]
          },
          "kind": {
            "enum": ["Functionality"]
          },
          "spec": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string",
                "description": "The user (or group) owner of the functionality",
                "minLength": 1
              }
            }
          }
        }
      }
    ]
  }